@using Section_08_Razor_Views.Models

@{
    string appTitle = "Asp.Net Core App";
    List<Person> people = new List<Person>(){
        new Person(){Name="John", DateOfBirth = DateTime.Parse("2000-05-06"), PersonGender = Gender.Male},
        new Person(){Name="Jane", DateOfBirth = DateTime.Parse("2000-05-06"), PersonGender = Gender.Male},
        new Person(){Name="Jack", DateOfBirth = DateTime.Parse("2000-05-06"), PersonGender = Gender.Male}
    };
}

@* @{ *@
@*     //local function *@
@*     double? GetAge(DateTime? dateOfBirth){ *@
@*         if(dateOfBirth is not null){ *@
@*             return (DateTime.Now - dateOfBirth.Value).TotalDays / 365; *@
@*         } *@

@*         return null; *@
@*     } *@
@* } *@

@{
    //code block

    //method
    double? GetAge(DateTime? dateOfBirth)
    {
        if (dateOfBirth is not null)
        {
            return (DateTime.Now - dateOfBirth.Value).TotalDays / 365;
        }

        return null;
    }

    int x = 10; //internally converted to private field in the class because razor view is a class

    string alertMessage = $"<script>alert('{people.Count} people found')</script>";
}

<!DOCTYPE html>
<html>
<head>
    <title>@appTitle</title>
    <meta charset="utf-8"/>
</head>
<body>
    @Html.Raw(alertMessage)
    <h1>Welcome
    </h1>

    @for(int i=0; i<2; i++){
        Person person = people[i];
        <span>Hello to</span>
        <div>
            @person.Name
            <span>, </span>
            <span>@person.PersonGender</span>
            
            @if(person.DateOfBirth !=null){
                <span>@person.DateOfBirth.Value.ToString("MM/dd/yyyy")</span>
                <span>@GetAge(person.DateOfBirth) years old</span>
            }
        </div>
    }

 </body>
</html>